Types of Java Generics:

1. Generic Method: 
	-	Generic Java method takes a parameter and returns some value after performing a task. 
	-	It is exactly like a normal function, however, a generic method has type parameters that are cited by actual type. 
	-	This allows the generic method to be used in a more general way. 
	-	The compiler takes care of the type of safety which enables programmers to code easily since they do not have to perform long, individual type castings.

2. Generic Classes: 
	-	A generic class is implemented exactly like a non-generic class.
	-	The only difference is that it contains a type parameter section. 
	-	There can be more than one type of parameter, separated by a comma. 
	-	The classes, which accept one or more parameters, ​are known as parameterized classes or parameterized types.
	-	Ex:
			// To create an instance of generic class 
			BaseType <Type> obj = new BaseType <Type>()
	-	Note: In Parameter type we can not use primitives like ‘int’,’char’ or ‘double’.